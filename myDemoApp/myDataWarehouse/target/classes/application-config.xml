<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<bean id="personBuilder" class="com.npickard.FlattenedPersonBuilder">
	</bean>

	<bean id="personService" class="com.npickard.service.FlattenedPersonService">
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		  destroy-method="close">
		<property name="url" value="jdbc:mysql://${MYDEMO_HOSTNAME}:${MYDEMO_DB_PORT}/${MYDEMO_DB_NAME}" />
		<!--<property name="url" value="jdbc:mysql://local.mydemo.com:3306/myDemoDb" />-->
		<property name="username" value="root" />
		<property name="password" value="password" />
	</bean>

	<bean id="entityManagerFactory"
		  class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
		</property>
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
		</property>

		<property name="jpaProperties">
			<props>
				<!--<prop key="hibernate.listeners.envers.autoRegister">false</prop>-->
				<prop key="hibernate.implicit_naming_strategy">
					org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
				</prop>
				<prop key="hibernate.physical_naming_strategy">
					org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
				</prop>
				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
				<prop key="hibernate.showSql">true</prop>
				<prop key="hibernate.formatSql">true</prop>
				<prop key="hibernate.generate_statistics">true</prop>
				<prop key="org.hibernate.envers.audit_table_suffix">AUD_</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.npickard</value>
				<value>com.npickard.dao</value>
				<value>com.npickard.model</value>
				<value>com.npickard.service</value>
			</list>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>

	<!-- =============================================== -->
	<!-- JMS Common, Define JMS connectionFactory       -->
	<!-- =============================================== -->
	<!-- Activemq connection factory -->
	<bean id="amqConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<!-- brokerURL, You may have different IP or port -->
		<constructor-arg index="0" value="tcp://local.mydemo.com:61616" />
	</bean>

	<!-- Pooled Spring connection factory -->
	<bean id="connectionFactory"
		  class="org.springframework.jms.connection.CachingConnectionFactory">
		<constructor-arg ref="amqConnectionFactory" />
	</bean>

	<!-- ======================================================= -->
	<!-- JMS Send, define default destination and JmsTemplate    -->
	<!-- ======================================================= -->
	<!-- Default Destination Queue Definition -->
	<!--<bean id="defaultDestination" class="org.apache.activemq.command.ActiveMQQueue">-->
		<!--&lt;!&ndash; name of the queue &ndash;&gt;-->
		<!--<constructor-arg index="0" value="MyDemoQueue" />-->
	<!--</bean>-->

	<bean id="myDemoDestination" class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg value="MyDemoTopic" />
	</bean>


	<!-- JmsTemplate Definition -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="defaultDestination" ref="myDemoDestination" />
	</bean>


	<!-- ============================================================= -->
	<!-- JMS Receiveï¼ŒDefine MessageListenerContainer                  -->
	<!-- ============================================================= -->
	<!--<bean id = "messageListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">-->
		<!--<property name="connectionFactory" ref="connectionFactory"/>-->
		<!--<property name="destinationName" value="Send2Recv"/>-->
		<!--<property name="messageListener" ref="jmsMessageListener"/>-->
	<!--</bean>-->

	<!-- ============================================================= -->
	<!-- JMS receive.                                                  -->
	<!-- Define MessageListenerAdapter and MessageListenerContainer    -->
	<!-- ============================================================= -->
	<bean id="messageListenerAdapter"
		  class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
		<constructor-arg ref="jmsMessageListener" />
	</bean>

	<bean id="messageListenerContainer"
		  class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destinationName" value="MyDemoTopic" />
		<property name="messageListener" ref="messageListenerAdapter" />
		<property name="pubSubDomain" value="true" />
	</bean>

</beans>